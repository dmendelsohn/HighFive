package jmraa;

public class Encoder{

    private long nativeHandle;
    private boolean invert;

    public Encoder(int pinA, int pinB, boolean invertIn){
	loadEncoderNative(pinA, pinB);
	invert = invertIn;
    }

    private native void loadEncoderNative(int pinA, int pinB);

<<<<<<< HEAD
=======
    private void update(){
	for(int i = 99; i>0; i--){
	    counts[i] = counts[i-1];
	}
	int next = getPhase();
	int delta = next - phase;
	phase = next;
	if(delta==1||delta==-3){
	    counts[0]+=(invert?-1:1);
	} else if(delta==-1||delta==3){
	    counts[0]+=(invert?1:-1);
	} else if(delta!=0){
	    //Fuckin weird
	    System.out.println("weird encoder phase change from " + (next-delta) + " to " + next);
	}
    }
    
>>>>>>> c276399368fc3757459ef93b51bc54448114ef71
    public int getCount(){
	return getCountNative()*(invert?-1:1);
    }

    private native int getCountNative();

    public native int getDerivative();
}
